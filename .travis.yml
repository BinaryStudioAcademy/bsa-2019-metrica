sudo: required
services:
  - docker
env:
  matrix:
    - DOCKER_COMPOSE_VERSION=1.22.0
  global:
    - PATH=$HOME/.local/bin:$PATH
cache:
  directories:
    - frontend/node_modules
    - backend/vendor
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose -v
  - pip install requests[security]
  - pip install --user awscli
  - sudo groupadd -g 1000 metrica-group
  - sudo usermod -a -G 1000 travis
  - $(aws ecr get-login --region ${AWS_REGION} --no-include-email)
  - docker-compose -f docker-compose.test.yml run --rm node npm install
  - docker-compose -f docker-compose.test.yml run --rm node npm run build
  - ./.scripts/build.sh app
  - ./.scripts/build.sh webserver
script:
  - cp backend/.env.travis backend/.env
  - docker-compose -f docker-compose.test.yml up -d
  - docker-compose -f docker-compose.test.yml ps
  - docker-compose -f docker-compose.test.yml exec app composer install
  - docker-compose -f docker-compose.test.yml exec app php artisan key:generate
  - docker-compose -f docker-compose.test.yml exec app php artisan jwt:secret
  - docker-compose -f docker-compose.test.yml exec app php artisan migrate --seed --force
  - docker-compose -f docker-compose.test.yml exec app ./vendor/bin/phpunit
  - docker-compose -f docker-compose.test.yml run node npm run lint
after_script:
  - docker-compose -f docker-compose.test.yml down
  - docker image rmi -f metrica/app:latest
  - docker image rmi -f metrica/webserver:latest
  - docker images
branches:
  only:
    - master
    - develop
deploy:
  - provider: script
    skip_cleanup: true
    script: "bash .scripts/deploy.sh"
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: "bash .scripts/deploy.sh"
    on:
      branch: develop